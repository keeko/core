{
	"swagger": "2.0",
	"info": {
		"title": "Keeko core API"
	},
	"paths": {
		"/languages": {
			"get": {
				"description": "Paginates languages",
				"operationId": "language-paginate",
				"responses": {
					"200": {
						"description": "Array of languages",
						"schema": {
							"$ref": "#/definitions/PagedLanguages"
						}
					}
				}
			}
		},
		"/languages/{id}": {
			"get": {
				"description": "Reads a language",
				"operationId": "language-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The language id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the language",
						"schema": {
							"$ref": "#/definitions/Language"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No language found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/language-scopes": {
			"get": {
				"description": "Paginates language_scopes",
				"operationId": "language_scope-paginate",
				"responses": {
					"200": {
						"description": "Array of language_scopes",
						"schema": {
							"$ref": "#/definitions/PagedLanguageScopes"
						}
					}
				}
			}
		},
		"/language-scopes/{id}": {
			"get": {
				"description": "Reads a language_scope",
				"operationId": "language_scope-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The language_scope id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the language_scope",
						"schema": {
							"$ref": "#/definitions/LanguageScope"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No language_scope found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/language-types": {
			"get": {
				"description": "Paginates language_types",
				"operationId": "language_type-paginate",
				"responses": {
					"200": {
						"description": "Array of language_types",
						"schema": {
							"$ref": "#/definitions/PagedLanguageTypes"
						}
					}
				}
			}
		},
		"/language-types/{id}": {
			"get": {
				"description": "Reads a language_type",
				"operationId": "language_type-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The language_type id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the language_type",
						"schema": {
							"$ref": "#/definitions/LanguageType"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No language_type found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/language-scripts": {
			"get": {
				"description": "Paginates language_scripts",
				"operationId": "language_script-paginate",
				"responses": {
					"200": {
						"description": "Array of language_scripts",
						"schema": {
							"$ref": "#/definitions/PagedLanguageScripts"
						}
					}
				}
			}
		},
		"/language-scripts/{id}": {
			"get": {
				"description": "Reads a language_script",
				"operationId": "language_script-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The language_script id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the language_script",
						"schema": {
							"$ref": "#/definitions/LanguageScript"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No language_script found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/language-families": {
			"get": {
				"description": "Paginates language_families",
				"operationId": "language_family-paginate",
				"responses": {
					"200": {
						"description": "Array of language_families",
						"schema": {
							"$ref": "#/definitions/PagedLanguageFamilies"
						}
					}
				}
			}
		},
		"/language-families/{id}": {
			"get": {
				"description": "Reads a language_family",
				"operationId": "language_family-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The language_family id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the language_family",
						"schema": {
							"$ref": "#/definitions/LanguageFamily"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No language_family found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/language-variants": {
			"get": {
				"description": "Paginates language_variants",
				"operationId": "language_variant-paginate",
				"responses": {
					"200": {
						"description": "Array of language_variants",
						"schema": {
							"$ref": "#/definitions/PagedLanguageVariants"
						}
					}
				}
			}
		},
		"/language-variants/{id}": {
			"get": {
				"description": "Reads a language_variant",
				"operationId": "language_variant-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The language_variant id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the language_variant",
						"schema": {
							"$ref": "#/definitions/LanguageVariant"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No language_variant found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/currencies": {
			"get": {
				"description": "Paginates currencies",
				"operationId": "currency-paginate",
				"responses": {
					"200": {
						"description": "Array of currencies",
						"schema": {
							"$ref": "#/definitions/PagedCurrencies"
						}
					}
				}
			}
		},
		"/currencies/{id}": {
			"get": {
				"description": "Reads a currency",
				"operationId": "currency-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The currency id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the currency",
						"schema": {
							"$ref": "#/definitions/Currency"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No currency found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/countries": {
			"get": {
				"description": "Paginates countries",
				"operationId": "country-paginate",
				"responses": {
					"200": {
						"description": "Array of countries",
						"schema": {
							"$ref": "#/definitions/PagedCountries"
						}
					}
				}
			}
		},
		"/countries/{id}": {
			"get": {
				"description": "Reads a country",
				"operationId": "country-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The country id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the country",
						"schema": {
							"$ref": "#/definitions/Country"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No country found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/continents": {
			"get": {
				"description": "Paginates continents",
				"operationId": "continent-paginate",
				"responses": {
					"200": {
						"description": "Array of continents",
						"schema": {
							"$ref": "#/definitions/PagedContinents"
						}
					}
				}
			}
		},
		"/continents/{id}": {
			"get": {
				"description": "Reads a continent",
				"operationId": "continent-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The continent id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the continent",
						"schema": {
							"$ref": "#/definitions/Continent"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No continent found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/subdivisions": {
			"get": {
				"description": "Paginates subdivisions",
				"operationId": "subdivision-paginate",
				"responses": {
					"200": {
						"description": "Array of subdivisions",
						"schema": {
							"$ref": "#/definitions/PagedSubdivisions"
						}
					}
				}
			}
		},
		"/subdivisions/{id}": {
			"get": {
				"description": "Reads a subdivision",
				"operationId": "subdivision-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The subdivision id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the subdivision",
						"schema": {
							"$ref": "#/definitions/Subdivision"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No subdivision found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/region-types": {
			"get": {
				"description": "Paginates region_types",
				"operationId": "region_type-paginate",
				"responses": {
					"200": {
						"description": "Array of region_types",
						"schema": {
							"$ref": "#/definitions/PagedRegionTypes"
						}
					}
				}
			}
		},
		"/region-types/{id}": {
			"get": {
				"description": "Reads a region_type",
				"operationId": "region_type-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The region_type id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the region_type",
						"schema": {
							"$ref": "#/definitions/RegionType"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No region_type found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/region-areas": {
			"get": {
				"description": "Paginates region_areas",
				"operationId": "region_area-paginate",
				"responses": {
					"200": {
						"description": "Array of region_areas",
						"schema": {
							"$ref": "#/definitions/PagedRegionAreas"
						}
					}
				}
			}
		},
		"/region-areas/{id}": {
			"get": {
				"description": "Reads a region_area",
				"operationId": "region_area-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The region_area id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the region_area",
						"schema": {
							"$ref": "#/definitions/RegionArea"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No region_area found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/localizations": {
			"get": {
				"description": "Paginates localizations",
				"operationId": "localization-paginate",
				"responses": {
					"200": {
						"description": "Array of localizations",
						"schema": {
							"$ref": "#/definitions/PagedLocalizations"
						}
					}
				}
			},
			"post": {
				"description": "Creates a localization",
				"operationId": "localization-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new localization",
						"schema": {
							"$ref": "#/definitions/WritableLocalization"
						}
					}
				],
				"responses": {
					"201": {
						"description": "localization created"
					}
				}
			}
		},
		"/localizations/{id}": {
			"get": {
				"description": "Reads a localization",
				"operationId": "localization-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the localization",
						"schema": {
							"$ref": "#/definitions/Localization"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a localization",
				"operationId": "localization-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "localization updated",
						"schema": {
							"$ref": "#/definitions/Localization"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a localization",
				"operationId": "localization-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "localization deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/localizations/{id}/relationship/localizations": {
			"get": {
				"description": "Reads the relationship of localization to localization",
				"operationId": "localization-to-localization-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Localization from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of localization to localization",
				"operationId": "localization-to-localization-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Localization",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Localization from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds localization as relationship to localization",
				"operationId": "localization-to-localization-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Localization",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Localization from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes localization as relationship to localization",
				"operationId": "localization-to-localization-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Localization from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/localizations/{id}/relationship/parent": {
			"get": {
				"description": "Reads the relationship of localization to parent",
				"operationId": "localization-to-parent-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Parent from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of localization to parent",
				"operationId": "localization-to-parent-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Parent",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Parent from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/localizations/{id}/relationship/language": {
			"get": {
				"description": "Reads the relationship of localization to language",
				"operationId": "localization-to-language-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Language from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of localization to language",
				"operationId": "localization-to-language-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Language",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Language from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/localizations/{id}/relationship/ext-lang": {
			"get": {
				"description": "Reads the relationship of localization to ext_lang",
				"operationId": "localization-to-ext_lang-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve ExtLang from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of localization to ext_lang",
				"operationId": "localization-to-ext_lang-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates ExtLang",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve ExtLang from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/localizations/{id}/relationship/script": {
			"get": {
				"description": "Reads the relationship of localization to script",
				"operationId": "localization-to-script-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Script from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of localization to script",
				"operationId": "localization-to-script-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Script",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Script from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/localizations/{id}/relationship/language-variants": {
			"get": {
				"description": "Reads the relationship of localization to language_variant",
				"operationId": "localization-to-language_variant-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve LanguageVariant from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of localization to language_variant",
				"operationId": "localization-to-language_variant-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates LanguageVariant",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve LanguageVariant from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds language_variant as relationship to localization",
				"operationId": "localization-to-language_variant-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds LanguageVariant",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve LanguageVariant from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes language_variant as relationship to localization",
				"operationId": "localization-to-language_variant-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve LanguageVariant from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/localizations/{id}/relationship/application-uris": {
			"get": {
				"description": "Reads the relationship of localization to application_uri",
				"operationId": "localization-to-application_uri-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve ApplicationUri from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of localization to application_uri",
				"operationId": "localization-to-application_uri-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates ApplicationUri",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve ApplicationUri from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds application_uri as relationship to localization",
				"operationId": "localization-to-application_uri-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds ApplicationUri",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve ApplicationUri from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes application_uri as relationship to localization",
				"operationId": "localization-to-application_uri-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The localization id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve ApplicationUri from localization",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No localization found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/applications": {
			"get": {
				"description": "Paginates applications",
				"operationId": "application-paginate",
				"responses": {
					"200": {
						"description": "Array of applications",
						"schema": {
							"$ref": "#/definitions/PagedApplications"
						}
					}
				}
			},
			"post": {
				"description": "Creates an application",
				"operationId": "application-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new application",
						"schema": {
							"$ref": "#/definitions/WritableApplication"
						}
					}
				],
				"responses": {
					"201": {
						"description": "application created"
					}
				}
			}
		},
		"/applications/{id}": {
			"get": {
				"description": "Reads an application",
				"operationId": "application-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the application",
						"schema": {
							"$ref": "#/definitions/Application"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates an application",
				"operationId": "application-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "application updated",
						"schema": {
							"$ref": "#/definitions/Application"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes an application",
				"operationId": "application-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "application deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/applications/{id}/relationship/application-uris": {
			"get": {
				"description": "Reads the relationship of application to application_uri",
				"operationId": "application-to-application_uri-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve ApplicationUri from application",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of application to application_uri",
				"operationId": "application-to-application_uri-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates ApplicationUri",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve ApplicationUri from application",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds application_uri as relationship to application",
				"operationId": "application-to-application_uri-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds ApplicationUri",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve ApplicationUri from application",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes application_uri as relationship to application",
				"operationId": "application-to-application_uri-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve ApplicationUri from application",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/application-uris": {
			"get": {
				"description": "Paginates application_uris",
				"operationId": "application_uri-paginate",
				"responses": {
					"200": {
						"description": "Array of application_uris",
						"schema": {
							"$ref": "#/definitions/PagedApplicationUris"
						}
					}
				}
			},
			"post": {
				"description": "Creates an application_uri",
				"operationId": "application_uri-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new application_uri",
						"schema": {
							"$ref": "#/definitions/WritableApplicationUri"
						}
					}
				],
				"responses": {
					"201": {
						"description": "application_uri created"
					}
				}
			}
		},
		"/application-uris/{id}": {
			"get": {
				"description": "Reads an application_uri",
				"operationId": "application_uri-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application_uri id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the application_uri",
						"schema": {
							"$ref": "#/definitions/ApplicationUri"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application_uri found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates an application_uri",
				"operationId": "application_uri-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application_uri id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "application_uri updated",
						"schema": {
							"$ref": "#/definitions/ApplicationUri"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application_uri found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes an application_uri",
				"operationId": "application_uri-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application_uri id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "application_uri deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application_uri found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/application-uris/{id}/relationship/application": {
			"get": {
				"description": "Reads the relationship of application_uri to application",
				"operationId": "application_uri-to-application-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application_uri id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Application from application_uri",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application_uri found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of application_uri to application",
				"operationId": "application_uri-to-application-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application_uri id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Application",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Application from application_uri",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application_uri found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/application-uris/{id}/relationship/localization": {
			"get": {
				"description": "Reads the relationship of application_uri to localization",
				"operationId": "application_uri-to-localization-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application_uri id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Localization from application_uri",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application_uri found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of application_uri to localization",
				"operationId": "application_uri-to-localization-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The application_uri id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Localization",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Localization from application_uri",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No application_uri found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/modules": {
			"get": {
				"description": "Paginates modules",
				"operationId": "module-paginate",
				"responses": {
					"200": {
						"description": "Array of modules",
						"schema": {
							"$ref": "#/definitions/PagedModules"
						}
					}
				}
			},
			"post": {
				"description": "Creates a module",
				"operationId": "module-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new module",
						"schema": {
							"$ref": "#/definitions/WritableModule"
						}
					}
				],
				"responses": {
					"201": {
						"description": "module created"
					}
				}
			}
		},
		"/modules/{id}": {
			"get": {
				"description": "Reads a module",
				"operationId": "module-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The module id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the module",
						"schema": {
							"$ref": "#/definitions/Module"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No module found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a module",
				"operationId": "module-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The module id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "module updated",
						"schema": {
							"$ref": "#/definitions/Module"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No module found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a module",
				"operationId": "module-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The module id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "module deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No module found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/modules/{id}/relationship/actions": {
			"get": {
				"description": "Reads the relationship of module to action",
				"operationId": "module-to-action-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The module id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Action from module",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No module found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of module to action",
				"operationId": "module-to-action-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The module id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Action",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Action from module",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No module found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds action as relationship to module",
				"operationId": "module-to-action-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The module id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Action",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Action from module",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No module found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes action as relationship to module",
				"operationId": "module-to-action-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The module id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Action from module",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No module found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/actions": {
			"get": {
				"description": "Paginates actions",
				"operationId": "action-paginate",
				"responses": {
					"200": {
						"description": "Array of actions",
						"schema": {
							"$ref": "#/definitions/PagedActions"
						}
					}
				}
			},
			"post": {
				"description": "Creates an action",
				"operationId": "action-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new action",
						"schema": {
							"$ref": "#/definitions/WritableAction"
						}
					}
				],
				"responses": {
					"201": {
						"description": "action created"
					}
				}
			}
		},
		"/actions/{id}": {
			"get": {
				"description": "Reads an action",
				"operationId": "action-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the action",
						"schema": {
							"$ref": "#/definitions/Action"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates an action",
				"operationId": "action-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "action updated",
						"schema": {
							"$ref": "#/definitions/Action"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes an action",
				"operationId": "action-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "action deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/actions/{id}/relationship/module": {
			"get": {
				"description": "Reads the relationship of action to module",
				"operationId": "action-to-module-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Module from action",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of action to module",
				"operationId": "action-to-module-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Module",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Module from action",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/actions/{id}/relationship/groups": {
			"get": {
				"description": "Reads the relationship of action to group",
				"operationId": "action-to-group-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from action",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of action to group",
				"operationId": "action-to-group-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Group",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from action",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds group as relationship to action",
				"operationId": "action-to-group-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Group",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from action",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes group as relationship to action",
				"operationId": "action-to-group-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from action",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/actions/{id}/relationship/apis": {
			"get": {
				"description": "Reads the relationship of action to api",
				"operationId": "action-to-api-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Api from action",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of action to api",
				"operationId": "action-to-api-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Api",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Api from action",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds api as relationship to action",
				"operationId": "action-to-api-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Api",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Api from action",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes api as relationship to action",
				"operationId": "action-to-api-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The action id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Api from action",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No action found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/extensions": {
			"get": {
				"description": "Paginates extensions",
				"operationId": "extension-paginate",
				"responses": {
					"200": {
						"description": "Array of extensions",
						"schema": {
							"$ref": "#/definitions/PagedExtensions"
						}
					}
				}
			},
			"post": {
				"description": "Creates an extension",
				"operationId": "extension-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new extension",
						"schema": {
							"$ref": "#/definitions/WritableExtension"
						}
					}
				],
				"responses": {
					"201": {
						"description": "extension created"
					}
				}
			}
		},
		"/extensions/{id}": {
			"get": {
				"description": "Reads an extension",
				"operationId": "extension-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The extension id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the extension",
						"schema": {
							"$ref": "#/definitions/Extension"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No extension found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates an extension",
				"operationId": "extension-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The extension id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "extension updated",
						"schema": {
							"$ref": "#/definitions/Extension"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No extension found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes an extension",
				"operationId": "extension-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The extension id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "extension deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No extension found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/preferences": {
			"get": {
				"description": "Paginates preferences",
				"operationId": "preference-paginate",
				"responses": {
					"200": {
						"description": "Array of preferences",
						"schema": {
							"$ref": "#/definitions/PagedPreferences"
						}
					}
				}
			},
			"post": {
				"description": "Creates a preference",
				"operationId": "preference-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new preference",
						"schema": {
							"$ref": "#/definitions/WritablePreference"
						}
					}
				],
				"responses": {
					"201": {
						"description": "preference created"
					}
				}
			}
		},
		"/preferences/{id}": {
			"get": {
				"description": "Reads a preference",
				"operationId": "preference-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The preference id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the preference",
						"schema": {
							"$ref": "#/definitions/Preference"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No preference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a preference",
				"operationId": "preference-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The preference id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "preference updated",
						"schema": {
							"$ref": "#/definitions/Preference"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No preference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a preference",
				"operationId": "preference-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The preference id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "preference deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No preference found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/apis": {
			"get": {
				"description": "Paginates apis",
				"operationId": "api-paginate",
				"responses": {
					"200": {
						"description": "Array of apis",
						"schema": {
							"$ref": "#/definitions/PagedApis"
						}
					}
				}
			},
			"post": {
				"description": "Creates an api",
				"operationId": "api-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new api",
						"schema": {
							"$ref": "#/definitions/WritableApi"
						}
					}
				],
				"responses": {
					"201": {
						"description": "api created"
					}
				}
			}
		},
		"/apis/{id}": {
			"get": {
				"description": "Reads an api",
				"operationId": "api-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The api id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the api",
						"schema": {
							"$ref": "#/definitions/Api"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No api found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates an api",
				"operationId": "api-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The api id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "api updated",
						"schema": {
							"$ref": "#/definitions/Api"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No api found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes an api",
				"operationId": "api-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The api id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "api deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No api found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/apis/{id}/relationship/action": {
			"get": {
				"description": "Reads the relationship of api to action",
				"operationId": "api-to-action-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The api id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Action from api",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No api found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of api to action",
				"operationId": "api-to-action-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The api id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Action",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Action from api",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No api found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"description": "Paginates users",
				"operationId": "user-paginate",
				"responses": {
					"200": {
						"description": "Array of users",
						"schema": {
							"$ref": "#/definitions/PagedUsers"
						}
					}
				}
			},
			"post": {
				"description": "Creates an user",
				"operationId": "user-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new user",
						"schema": {
							"$ref": "#/definitions/WritableUser"
						}
					}
				],
				"responses": {
					"201": {
						"description": "user created"
					}
				}
			}
		},
		"/users/{id}": {
			"get": {
				"description": "Reads an user",
				"operationId": "user-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the user",
						"schema": {
							"$ref": "#/definitions/User"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates an user",
				"operationId": "user-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "user updated",
						"schema": {
							"$ref": "#/definitions/User"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes an user",
				"operationId": "user-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "user deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/users/{id}/relationship/groups": {
			"get": {
				"description": "Reads the relationship of user to group",
				"operationId": "user-to-group-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from user",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of user to group",
				"operationId": "user-to-group-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Group",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from user",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds group as relationship to user",
				"operationId": "user-to-group-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Group",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from user",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes group as relationship to user",
				"operationId": "user-to-group-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Group from user",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/users/{id}/relationship/activities": {
			"get": {
				"description": "Reads the relationship of user to activity",
				"operationId": "user-to-activity-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Activity from user",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of user to activity",
				"operationId": "user-to-activity-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Activity",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Activity from user",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds activity as relationship to user",
				"operationId": "user-to-activity-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Activity",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Activity from user",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes activity as relationship to user",
				"operationId": "user-to-activity-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The user id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Activity from user",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No user found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/groups": {
			"get": {
				"description": "Paginates groups",
				"operationId": "group-paginate",
				"responses": {
					"200": {
						"description": "Array of groups",
						"schema": {
							"$ref": "#/definitions/PagedGroups"
						}
					}
				}
			},
			"post": {
				"description": "Creates a group",
				"operationId": "group-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new group",
						"schema": {
							"$ref": "#/definitions/WritableGroup"
						}
					}
				],
				"responses": {
					"201": {
						"description": "group created"
					}
				}
			}
		},
		"/groups/{id}": {
			"get": {
				"description": "Reads a group",
				"operationId": "group-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the group",
						"schema": {
							"$ref": "#/definitions/Group"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates a group",
				"operationId": "group-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "group updated",
						"schema": {
							"$ref": "#/definitions/Group"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes a group",
				"operationId": "group-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "group deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/groups/{id}/relationship/users": {
			"get": {
				"description": "Reads the relationship of group to user",
				"operationId": "group-to-user-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve User from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of group to user",
				"operationId": "group-to-user-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates User",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve User from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds user as relationship to group",
				"operationId": "group-to-user-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds User",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve User from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes user as relationship to group",
				"operationId": "group-to-user-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve User from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/groups/{id}/relationship/actions": {
			"get": {
				"description": "Reads the relationship of group to action",
				"operationId": "group-to-action-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Action from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of group to action",
				"operationId": "group-to-action-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Action",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Action from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds action as relationship to group",
				"operationId": "group-to-action-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Action",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Action from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes action as relationship to group",
				"operationId": "group-to-action-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The group id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Action from group",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No group found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/activities": {
			"get": {
				"description": "Paginates activities",
				"operationId": "activity-paginate",
				"responses": {
					"200": {
						"description": "Array of activities",
						"schema": {
							"$ref": "#/definitions/PagedActivities"
						}
					}
				}
			},
			"post": {
				"description": "Creates an activity",
				"operationId": "activity-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new activity",
						"schema": {
							"$ref": "#/definitions/WritableActivity"
						}
					}
				],
				"responses": {
					"201": {
						"description": "activity created"
					}
				}
			}
		},
		"/activities/{id}": {
			"get": {
				"description": "Reads an activity",
				"operationId": "activity-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the activity",
						"schema": {
							"$ref": "#/definitions/Activity"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates an activity",
				"operationId": "activity-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "activity updated",
						"schema": {
							"$ref": "#/definitions/Activity"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes an activity",
				"operationId": "activity-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "activity deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/activities/{id}/relationship/actor": {
			"get": {
				"description": "Reads the relationship of activity to actor",
				"operationId": "activity-to-actor-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Actor from activity",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of activity to actor",
				"operationId": "activity-to-actor-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Actor",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Actor from activity",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/activities/{id}/relationship/object": {
			"get": {
				"description": "Reads the relationship of activity to object",
				"operationId": "activity-to-object-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Object from activity",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of activity to object",
				"operationId": "activity-to-object-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Object",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Object from activity",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/activities/{id}/relationship/target": {
			"get": {
				"description": "Reads the relationship of activity to target",
				"operationId": "activity-to-target-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Target from activity",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of activity to target",
				"operationId": "activity-to-target-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Target",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"$ref": "#/definitions/ResourceIdentifier"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Target from activity",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										},
										"related": {
											"type": "string"
										}
									}
								},
								"data": {
									"$ref": "#/definitions/ResourceIdentifier",
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/activity-objects": {
			"get": {
				"description": "Paginates activity_objects",
				"operationId": "activity_object-paginate",
				"responses": {
					"200": {
						"description": "Array of activity_objects",
						"schema": {
							"$ref": "#/definitions/PagedActivityObjects"
						}
					}
				}
			},
			"post": {
				"description": "Creates an activity_object",
				"operationId": "activity_object-create",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "The new activity_object",
						"schema": {
							"$ref": "#/definitions/WritableActivityObject"
						}
					}
				],
				"responses": {
					"201": {
						"description": "activity_object created"
					}
				}
			}
		},
		"/activity-objects/{id}": {
			"get": {
				"description": "Reads an activity_object",
				"operationId": "activity_object-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity_object id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "gets the activity_object",
						"schema": {
							"$ref": "#/definitions/ActivityObject"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity_object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates an activity_object",
				"operationId": "activity_object-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity_object id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "activity_object updated",
						"schema": {
							"$ref": "#/definitions/ActivityObject"
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity_object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Deletes an activity_object",
				"operationId": "activity_object-delete",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity_object id",
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "activity_object deleted"
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity_object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		},
		"/activity-objects/{id}/relationship/activities": {
			"get": {
				"description": "Reads the relationship of activity_object to activity",
				"operationId": "activity_object-to-activity-relationship-read",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity_object id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Activity from activity_object",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity_object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"patch": {
				"description": "Updates the relationship of activity_object to activity",
				"operationId": "activity_object-to-activity-relationship-update",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity_object id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Updates Activity",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Activity from activity_object",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity_object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"post": {
				"description": "Adds activity as relationship to activity_object",
				"operationId": "activity_object-to-activity-relationship-add",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity_object id",
						"type": "integer"
					},
					{
						"name": "body",
						"in": "body",
						"required": true,
						"description": "Adds Activity",
						"schema": {
							"type": "object",
							"properties": {
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Activity from activity_object",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity_object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			},
			"delete": {
				"description": "Removes activity as relationship to activity_object",
				"operationId": "activity_object-to-activity-relationship-remove",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "The activity_object id",
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Retrieve Activity from activity_object",
						"schema": {
							"type": "object",
							"properties": {
								"links": {
									"type": "object",
									"properties": {
										"self": {
											"type": "string"
										}
									}
								},
								"data": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ResourceIdentifier"
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid ID supplied",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					},
					"404": {
						"description": "No activity_object found",
						"schema": {
							"$ref": "#/definitions/Errors"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"PagedLanguages": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Language"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableLanguage": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"alpha_2": {
									"type": "string"
								},
								"alpha_3T": {
									"type": "string"
								},
								"alpha_3B": {
									"type": "string"
								},
								"alpha_3": {
									"type": "string"
								},
								"parent_id": {
									"type": "integer"
								},
								"macrolanguage_status": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"native_name": {
									"type": "string"
								},
								"collate": {
									"type": "string"
								},
								"subtag": {
									"type": "string"
								},
								"prefix": {
									"type": "string"
								},
								"scope_id": {
									"type": "integer"
								},
								"type_id": {
									"type": "integer"
								},
								"family_id": {
									"type": "integer"
								},
								"default_script_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"sublanguages": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"parent": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"scope": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"type": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"script": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"family": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"localizations": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Language": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"alpha_2": {
									"type": "string"
								},
								"alpha_3T": {
									"type": "string"
								},
								"alpha_3B": {
									"type": "string"
								},
								"alpha_3": {
									"type": "string"
								},
								"parent_id": {
									"type": "integer"
								},
								"macrolanguage_status": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"native_name": {
									"type": "string"
								},
								"collate": {
									"type": "string"
								},
								"subtag": {
									"type": "string"
								},
								"prefix": {
									"type": "string"
								},
								"scope_id": {
									"type": "integer"
								},
								"type_id": {
									"type": "integer"
								},
								"family_id": {
									"type": "integer"
								},
								"default_script_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"sublanguages": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"parent": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"scope": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"type": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"script": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"family": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"localizations": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedLanguageScopes": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LanguageScope"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableLanguageScope": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"languages": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"LanguageScope": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"languages": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedLanguageTypes": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LanguageType"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableLanguageType": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"languages": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"LanguageType": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"languages": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedLanguageScripts": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LanguageScript"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableLanguageScript": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"alpha_4": {
									"type": "string"
								},
								"numeric": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"alias": {
									"type": "string"
								},
								"direction": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"languages": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"localizations": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"LanguageScript": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"alpha_4": {
									"type": "string"
								},
								"numeric": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"alias": {
									"type": "string"
								},
								"direction": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"languages": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"localizations": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedLanguageFamilies": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LanguageFamily"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableLanguageFamily": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"parent_id": {
									"type": "integer"
								},
								"alpha_3": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"languages": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"LanguageFamily": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"parent_id": {
									"type": "integer"
								},
								"alpha_3": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"languages": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedLanguageVariants": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LanguageVariant"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableLanguageVariant": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"subtag": {
									"type": "string"
								},
								"prefixes": {
									"type": "string"
								},
								"comment": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"localizations": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"LanguageVariant": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"subtag": {
									"type": "string"
								},
								"prefixes": {
									"type": "string"
								},
								"comment": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"localizations": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedCurrencies": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Currency"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableCurrency": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"numeric": {
									"type": "integer"
								},
								"alpha_3": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"symbol_left": {
									"type": "string"
								},
								"symbol_right": {
									"type": "string"
								},
								"decimal_digits": {
									"type": "integer"
								},
								"sub_divisor": {
									"type": "integer"
								},
								"sub_symbol_left": {
									"type": "string"
								},
								"sub_symbol_right": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"countries": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Currency": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"numeric": {
									"type": "integer"
								},
								"alpha_3": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"symbol_left": {
									"type": "string"
								},
								"symbol_right": {
									"type": "string"
								},
								"decimal_digits": {
									"type": "integer"
								},
								"sub_divisor": {
									"type": "integer"
								},
								"sub_symbol_left": {
									"type": "string"
								},
								"sub_symbol_right": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"countries": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedCountries": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Country"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableCountry": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"numeric": {
									"type": "integer"
								},
								"alpha_2": {
									"type": "string"
								},
								"alpha_3": {
									"type": "string"
								},
								"short_name": {
									"type": "string"
								},
								"ioc": {
									"type": "string"
								},
								"tld": {
									"type": "string"
								},
								"phone": {
									"type": "string"
								},
								"capital": {
									"type": "string"
								},
								"postal_code_format": {
									"type": "string"
								},
								"postal_code_regex": {
									"type": "string"
								},
								"continent_id": {
									"type": "integer"
								},
								"currency_id": {
									"type": "integer"
								},
								"type_id": {
									"type": "integer"
								},
								"subtype_id": {
									"type": "integer"
								},
								"sovereignity_id": {
									"type": "integer"
								},
								"formal_name": {
									"type": "string"
								},
								"formal_native_name": {
									"type": "string"
								},
								"short_native_name": {
									"type": "string"
								},
								"bbox_sw_lat": {
									"type": "double"
								},
								"bbox_sw_lng": {
									"type": "double"
								},
								"bbox_ne_lat": {
									"type": "double"
								},
								"bbox_ne_lng": {
									"type": "double"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"continent": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"currency": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"type": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"subtype": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"subordinates": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"country": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"subdivisions": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Country": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"numeric": {
									"type": "integer"
								},
								"alpha_2": {
									"type": "string"
								},
								"alpha_3": {
									"type": "string"
								},
								"short_name": {
									"type": "string"
								},
								"ioc": {
									"type": "string"
								},
								"tld": {
									"type": "string"
								},
								"phone": {
									"type": "string"
								},
								"capital": {
									"type": "string"
								},
								"postal_code_format": {
									"type": "string"
								},
								"postal_code_regex": {
									"type": "string"
								},
								"continent_id": {
									"type": "integer"
								},
								"currency_id": {
									"type": "integer"
								},
								"type_id": {
									"type": "integer"
								},
								"subtype_id": {
									"type": "integer"
								},
								"sovereignity_id": {
									"type": "integer"
								},
								"formal_name": {
									"type": "string"
								},
								"formal_native_name": {
									"type": "string"
								},
								"short_native_name": {
									"type": "string"
								},
								"bbox_sw_lat": {
									"type": "double"
								},
								"bbox_sw_lng": {
									"type": "double"
								},
								"bbox_ne_lat": {
									"type": "double"
								},
								"bbox_ne_lng": {
									"type": "double"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"continent": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"currency": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"type": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"subtype": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"subordinates": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"country": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"subdivisions": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedContinents": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Continent"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableContinent": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"parent_id": {
									"type": "integer"
								},
								"numeric": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"countries": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Continent": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"parent_id": {
									"type": "integer"
								},
								"numeric": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"countries": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedSubdivisions": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Subdivision"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableSubdivision": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"code": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"native_name": {
									"type": "string"
								},
								"alt_names": {
									"type": "string"
								},
								"parent_id": {
									"type": "integer"
								},
								"country_id": {
									"type": "integer"
								},
								"type_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"country": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"type": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Subdivision": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"code": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"native_name": {
									"type": "string"
								},
								"alt_names": {
									"type": "string"
								},
								"parent_id": {
									"type": "integer"
								},
								"country_id": {
									"type": "integer"
								},
								"type_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"country": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"type": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedRegionTypes": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RegionType"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableRegionType": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"area_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"countries": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"subdivisions": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"area": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"RegionType": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"area_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"countries": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"subdivisions": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"area": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedRegionAreas": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RegionArea"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableRegionArea": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"types": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"RegionArea": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"types": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedLocalizations": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Localization"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableLocalization": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"parent_id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"locale": {
									"type": "string"
								},
								"language_id": {
									"type": "integer"
								},
								"ext_language_id": {
									"type": "integer"
								},
								"region": {
									"type": "string"
								},
								"script_id": {
									"type": "integer"
								},
								"is_default": {
									"type": "boolean"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"localizations": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"parent": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"language": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"ext-lang": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"script": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"language-variants": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"application-uris": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Localization": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"parent_id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"locale": {
									"type": "string"
								},
								"language_id": {
									"type": "integer"
								},
								"ext_language_id": {
									"type": "integer"
								},
								"region": {
									"type": "string"
								},
								"script_id": {
									"type": "integer"
								},
								"is_default": {
									"type": "boolean"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"localizations": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"parent": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"language": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"ext-lang": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"script": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"language-variants": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"application-uris": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedApplications": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Application"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableApplication": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"class_name": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"installed_version": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"application-uris": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Application": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"class_name": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"installed_version": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"application-uris": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedApplicationUris": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ApplicationUri"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableApplicationUri": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"httphost": {
									"type": "string"
								},
								"basepath": {
									"type": "string"
								},
								"secure": {
									"type": "boolean"
								},
								"application_id": {
									"type": "integer"
								},
								"localization_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"application": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"localization": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"ApplicationUri": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"httphost": {
									"type": "string"
								},
								"basepath": {
									"type": "string"
								},
								"secure": {
									"type": "boolean"
								},
								"application_id": {
									"type": "integer"
								},
								"localization_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"application": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"localization": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedModules": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Module"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableModule": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"class_name": {
									"type": "string"
								},
								"activated_version": {
									"type": "string"
								},
								"default_action": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"has_api": {
									"type": "boolean"
								},
								"name": {
									"type": "string"
								},
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"installed_version": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"actions": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Module": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"class_name": {
									"type": "string"
								},
								"activated_version": {
									"type": "string"
								},
								"default_action": {
									"type": "string"
								},
								"slug": {
									"type": "string"
								},
								"has_api": {
									"type": "boolean"
								},
								"name": {
									"type": "string"
								},
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"installed_version": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"actions": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedActions": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Action"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableAction": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"class_name": {
									"type": "string"
								},
								"module_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"module": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"groups": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"apis": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Action": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"title": {
									"type": "string"
								},
								"description": {
									"type": "string"
								},
								"class_name": {
									"type": "string"
								},
								"module_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"module": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"groups": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"apis": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedExtensions": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Extension"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableExtension": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"key": {
									"type": "string"
								},
								"data": {
									"type": "string"
								},
								"package_id": {
									"type": "integer"
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Extension": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"key": {
									"type": "string"
								},
								"data": {
									"type": "string"
								},
								"package_id": {
									"type": "integer"
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedPreferences": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Preference"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritablePreference": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"key": {
									"type": "string"
								},
								"value": {
									"type": "string"
								},
								"module_id": {
									"type": "integer"
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Preference": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"key": {
									"type": "string"
								},
								"value": {
									"type": "string"
								},
								"module_id": {
									"type": "integer"
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedApis": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Api"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableApi": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"route": {
									"type": "string"
								},
								"method": {
									"type": "string"
								},
								"action_id": {
									"type": "integer"
								},
								"required_params": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"action": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Api": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"route": {
									"type": "string"
								},
								"method": {
									"type": "string"
								},
								"action_id": {
									"type": "integer"
								},
								"required_params": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"action": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedUsers": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/User"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableUser": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"user_name": {
									"type": "string"
								},
								"password": {
									"type": "string"
								},
								"given_name": {
									"type": "string"
								},
								"family_name": {
									"type": "string"
								},
								"nick_name": {
									"type": "string"
								},
								"display_name_user_select": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"birth": {
									"type": "string"
								},
								"sex": {
									"type": "integer"
								},
								"slug": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"groups": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"activities": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"User": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"user_name": {
									"type": "string"
								},
								"given_name": {
									"type": "string"
								},
								"family_name": {
									"type": "string"
								},
								"nick_name": {
									"type": "string"
								},
								"display_name": {
									"type": "string"
								},
								"email": {
									"type": "string"
								},
								"birth": {
									"type": "string"
								},
								"sex": {
									"type": "integer"
								},
								"slug": {
									"type": "string"
								},
								"created_at": {
									"type": "string"
								},
								"updated_at": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"groups": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"activities": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedGroups": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Group"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableGroup": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"owner_id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"is_guest": {
									"type": "boolean"
								},
								"is_default": {
									"type": "boolean"
								},
								"is_active": {
									"type": "boolean"
								},
								"is_system": {
									"type": "boolean"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"users": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"actions": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Group": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"owner_id": {
									"type": "integer"
								},
								"name": {
									"type": "string"
								},
								"is_guest": {
									"type": "boolean"
								},
								"is_default": {
									"type": "boolean"
								},
								"is_active": {
									"type": "boolean"
								},
								"is_system": {
									"type": "boolean"
								},
								"created_at": {
									"type": "string"
								},
								"updated_at": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"users": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								},
								"actions": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedActivities": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Activity"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableActivity": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"actor_id": {
									"type": "integer"
								},
								"verb": {
									"type": "string"
								},
								"object_id": {
									"type": "integer"
								},
								"target_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"actor": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"object": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"target": {
									"type": "object",
									"properties": {
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Activity": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"actor_id": {
									"type": "integer"
								},
								"verb": {
									"type": "string"
								},
								"object_id": {
									"type": "integer"
								},
								"target_id": {
									"type": "integer"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"actor": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"object": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"target": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "object"
										},
										"id": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PagedActivityObjects": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ActivityObject"
					}
				},
				"meta": {
					"$ref": "#/definitions/PagedMeta"
				}
			}
		},
		"WritableActivityObject": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"class_name": {
									"type": "string"
								},
								"type": {
									"type": "string"
								},
								"display_name": {
									"type": "string"
								},
								"url": {
									"type": "string"
								},
								"reference_id": {
									"type": "integer"
								},
								"version": {
									"type": "integer"
								},
								"extra": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"activities": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"ActivityObject": {
			"type": "object",
			"properties": {
				"links": {
					"type": "object",
					"properties": {
						"self": {
							"type": "string"
						}
					}
				},
				"data": {
					"type": "object",
					"properties": {
						"attributes": {
							"type": "object",
							"properties": {
								"class_name": {
									"type": "string"
								},
								"type": {
									"type": "string"
								},
								"display_name": {
									"type": "string"
								},
								"url": {
									"type": "string"
								},
								"reference_id": {
									"type": "integer"
								},
								"version": {
									"type": "integer"
								},
								"extra": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "object",
							"properties": {
								"activities": {
									"type": "object",
									"properties": {
										"links": {
											"type": "object",
											"properties": {
												"self": {
													"type": "string"
												}
											}
										},
										"data": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/ResourceIdentifier"
											}
										}
									}
								}
							}
						}
					}
				},
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Errors": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/Error"
			}
		},
		"Error": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"detail": {
					"type": "string"
				},
				"meta": {
					"type": "object"
				}
			}
		},
		"PagedMeta": {
			"type": "object",
			"properties": {
				"total": {
					"type": "integer"
				},
				"first": {
					"type": "integer"
				},
				"next": {
					"type": "integer"
				},
				"previous": {
					"type": "integer"
				},
				"last": {
					"type": "integer"
				}
			}
		},
		"ResourceIdentifier": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		}
	},
	"tags": [
		{
			"name": "core"
		}
	]
}